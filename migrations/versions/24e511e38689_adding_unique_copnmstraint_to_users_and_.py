"""Adding unique copnmstraint to users and skill ids, both can not be inserted togheter with same value more than one time

Revision ID: 24e511e38689
Revises: a297652566ae
Create Date: 2024-06-05 18:13:08.989619

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "24e511e38689"
down_revision: Union[str, None] = "a297652566ae"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user_skills_association", sa.Column("user_id", sa.Uuid(), nullable=False))
    op.create_unique_constraint(None, "user_skills_association", ["user_id", "skill_id"])
    op.drop_constraint("user_skills_association_users_id_fkey", "user_skills_association", type_="foreignkey")
    op.create_foreign_key(None, "user_skills_association", "users", ["user_id"], ["id"])
    op.drop_column("user_skills_association", "users_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user_skills_association", sa.Column("users_id", sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, "user_skills_association", type_="foreignkey")
    op.create_foreign_key(
        "user_skills_association_users_id_fkey", "user_skills_association", "users", ["users_id"], ["id"]
    )
    op.drop_constraint(None, "user_skills_association", type_="unique")
    op.drop_column("user_skills_association", "user_id")
    # ### end Alembic commands ###
